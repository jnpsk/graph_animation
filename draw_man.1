.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DRAW 1"
.TH DRAW 1 "2019-05-16" "16/05/2019" "DRAW"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
draw.pl [options] file|url...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
draw.pl creates animated plot from given data.
Data can be passed as an file or url.
Only http and https are supported.
It is necessary to choose correct time format.
All input data will be merged into one plot.
You can specify animation effect as seen below, the most interesting one is \*(L"split\*(R".
Ouput anim.mp4 will be stored to folder specified by \-n or to './draw_i'
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-t, \-\-TimeFormat <\fBstrftime\fR\|(3c)>" 5
.IX Item "-t, --TimeFormat <strftime)>"
Timestamps format; default is '[%Y\-%m\-%d \f(CW%H:\fR%M:%S]'
.ie n .IP "\-X, \-\-Xmax <""auto""|""max""|vaulue>" 5
.el .IP "\-X, \-\-Xmax <``auto''|``max''|vaulue>" 5
.IX Item "-X, --Xmax <auto|max|vaulue>"
Scale maximum of X axis; default is 'max'
.ie n .IP "\-x, \-\-Xmin <""auto""|""min""|vaulue>" 5
.el .IP "\-x, \-\-Xmin <``auto''|``min''|vaulue>" 5
.IX Item "-x, --Xmin <auto|min|vaulue>"
Scale minimum of X axis; default is 'min'
.ie n .IP "\-Y, \-\-Ymax <""auto""|""max""|vaulue>" 5
.el .IP "\-Y, \-\-Ymax <``auto''|``max''|vaulue>" 5
.IX Item "-Y, --Ymax <auto|max|vaulue>"
Scale maximum value of Y axis; default is 'auto'
.ie n .IP "\-y, \-\-Ymin <""auto""|""min""|vaulue>" 5
.el .IP "\-y, \-\-Ymin <``auto''|``min''|vaulue>" 5
.IX Item "-y, --Ymin <auto|min|vaulue>"
Scale minimum value of Y axis; default is 'auto'
.Sp
Max two of these tree options can be used:
.RS 5
.IP "\-S, \-\-Speed <vaulue>" 3
.IX Item "-S, --Speed <vaulue>"
Set speed of animation; default is 1
.IP "\-T, \-\-Time <vaulue>" 3
.IX Item "-T, --Time <vaulue>"
Set duration of animation; no default value
.IP "\-F, \-\-FPS <vaulue>" 3
.IX Item "-F, --FPS <vaulue>"
Set \s-1FPS\s0 of animation; default is 25
.RE
.RS 5
.RE
.IP "\-c, \-\-CriticalValue <[xy]=value[:...]>" 5
.IX Item "-c, --CriticalValue <[xy]=value[:...]>"
List of critical values. Shown as line in graph.
.ie n .IP "\-l, \-\-Legend <""text"">" 5
.el .IP "\-l, \-\-Legend <``text''>" 5
.IX Item "-l, --Legend <text>"
Title for graph
.ie n .IP "\-g, \-\-GnuplotParams <""gnuplot parameter ..."">" 5
.el .IP "\-g, \-\-GnuplotParams <``gnuplot parameter ...''>" 5
.IX Item "-g, --GnuplotParams <gnuplot parameter ...>"
man gnuplot
.IP "\-e, \-\-EffectParams <param=val:param=val>" 5
.IX Item "-e, --EffectParams <param=val:param=val>"
.RS 5
.PD 0
.IP "split=<value>" 3
.IX Item "split=<value>"
.PD
Set number of starting points; default is 1
.ie n .IP "color=<""red""|""green""|""blue"">" 3
.el .IP "color=<``red''|``green''|``blue''>" 3
.IX Item "color=<red|green|blue>"
Set color of line; defaul is 'red'
.IP "ending=<value>" 3
.IX Item "ending=<value>"
Generates second output with freeze on last frame
.IP "reverse=<1|0>" 3
.IX Item "reverse=<1|0>"
Set to 1 to invert direction of lines; default is 0
.RE
.RS 5
.RE
.ie n .IP "\-f, \-\-ConfigFile <""path"">" 5
.el .IP "\-f, \-\-ConfigFile <``path''>" 5
.IX Item "-f, --ConfigFile <path>"
Path to a config file
.ie n .IP "\-n, \-\-Name <""text"">" 5
.el .IP "\-n, \-\-Name <``text''>" 5
.IX Item "-n, --Name <text>"
Name of output folder
.IP "\-E, \-\-IgnoreErrors" 5
.IX Item "-E, --IgnoreErrors"
Exit on serious error only
.IP "\-d, \-\-Debug" 5
.IX Item "-d, --Debug"
Print debug info
